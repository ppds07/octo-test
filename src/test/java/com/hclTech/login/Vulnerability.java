package com.hclTech.login;

import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class Vulnerability {
	List<String> scrapeVulOf(WebDriver driver, String vulPageUrl, String wpVersion)
	{
		driver.get(vulPageUrl);
		List<String> cve = new ArrayList<>();
		
		WebElement table = driver.findElement(By.xpath("//table"));
		List<WebElement> rows = table.findElements(By.tagName("tr"));
		
		for(WebElement row:rows)
		{
			List<WebElement> cells = row.findElements(By.tagName("td"));
			
			if(cells.size()>0)
			{
				String version = cells.get(4).getText().trim();
				if(version.equals(wpVersion))
				{
					String cveId = cells.get(0).getText().trim();
					cve.add(cveId);
				}
			}
		}
		
		return cve;
		
	}
	
	String topVulOf(WebDriver driver, String vulPageUrl, String wpVersion)
	{
		driver.get(vulPageUrl);
		float highest=0;
		String highCVE = "";
		
		WebElement table = driver.findElement(By.xpath("//table"));
		List<WebElement> rows = table.findElements(By.tagName("tr"));
		
		for(WebElement row:rows)
		{
			List<WebElement> cells = row.findElements(By.tagName("td"));
			
			if(cells.size()>0)
			{
				String version = cells.get(4).getText().trim();
				
				if(version.equals(wpVersion))
				{
					String score = cells.get(3).getText().trim();
					String cve = cells.get(0).getText().trim();
					float sc = Float.parseFloat(score);
					if(sc>highest)
					{
						highest = sc;
						highCVE = cve;
					}
					
				}
			}
		}
		return highCVE;
		
	}
	}


